version: "3"
services:
  #reverse-proxy:
  #  image: nginx
  #  container_name: nginx
  #  network_mode: "host"
  #  ports:
  #    - 80:80
  #    - 443:443
  #  volumes:
  #    - ./nginx:/usr/PROXY/NGINX/nginx:ro
  #    - ./ssl:/usr/PROXY/SSL/ssl:ro
  #    - ./log:/usr/PROXY/LOG
    #networks:
    #  app_net:
    #    ipv4_address: 172.2.0.5
  #database:
  #  image: 'postgres:12'
  #  container_name: postgres
  #  ports:
  #    - "5432:5432"
  #  network_mode: "host"
  #  networks:
  #    app_net:
  #      ipv4_address: 172.2.0.4
  #  env_file: 
  #    - .env
  #  environment:
  #    - POSTGRES_USER=admin
  #    - POSTGRES_PASSWORD=admin
  #    - POSTGRES_DB=V1
  #  volumes: 
  #    - db:/var/lib/postgresql/data
  client:
    build: 
      context: client
    image: client
    container_name: client
    ports:
      - "3002:3002"
    volumes:
      - ./nginx:/usr/PROXY/NGINX/nginx:ro
      - ./ssl:/usr/PROXY/SSL/ssl:ro
    networks:
      app_net:
        ipv4_address: 172.2.0.2
  server:
    build:
      context: server
    image: server
    container_name: server
    ports:
      - "8001:8001"
    env_file: 
      - .env
    environment:
      - PG_HOST=172.2.0.4
      - PG_PORT=5432
      - PG_DBNM=V1
      - PG_USER=admin
      - PG_PASS=admin
    network_mode: "host"
    networks:
      app_net:
        ipv4_address: 172.2.0.3
    depends_on:
      #- database
      #- reverse-proxy

volumes:
  db:
    driver: local
networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.2.0.0/24